{"ast":null,"code":"var _jsxFileName = \"/home/liege/dev/brainstation/training/react/pondit/assignment/imdb_funtional_component/IMDb-Movie-List/src/components/rating.component.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Rating = props => {\n  _s();\n\n  const [isHovered, setIsHovered] = useState(false);\n  const {\n    handleToggleRating,\n    rank\n  } = props;\n\n  function handleHover() {\n    setIsHovered(true);\n  }\n\n  function handleOut() {\n    setIsHovered(false);\n  }\n\n  function getClassName() {\n    const {\n      isRated\n    } = props;\n    let className = isRated ? \"bi bi-star-fill\" : \"bi bi-star\";\n    className += isHovered ? \" text-primary\" : \"\";\n    return className;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"i\", {\n      onMouseOver: handleHover,\n      onMouseOut: handleOut,\n      onClick: () => handleToggleRating(rank),\n      className: getClassName()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Rating, \"FPQn8a98tPjpohC7NUYORQR8GJE=\");\n\n_c = Rating;\nexport default Rating;\n\nvar _c;\n\n$RefreshReg$(_c, \"Rating\");","map":{"version":3,"sources":["/home/liege/dev/brainstation/training/react/pondit/assignment/imdb_funtional_component/IMDb-Movie-List/src/components/rating.component.js"],"names":["React","useState","Rating","props","isHovered","setIsHovered","handleToggleRating","rank","handleHover","handleOut","getClassName","isRated","className"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM;AAAEK,IAAAA,kBAAF;AAAsBC,IAAAA;AAAtB,MAA+BJ,KAArC;;AAEA,WAASK,WAAT,GAAuB;AACnBH,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAASI,SAAT,GAAqB;AACjBJ,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;;AAED,WAASK,YAAT,GAAwB;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAcR,KAApB;AACA,QAAIS,SAAS,GAAGD,OAAO,GAAG,iBAAH,GAAuB,YAA9C;AACAC,IAAAA,SAAS,IAAIR,SAAS,GAAG,eAAH,GAAqB,EAA3C;AACA,WAAOQ,SAAP;AACH;;AAED,sBACI;AAAA,2BACI;AACI,MAAA,WAAW,EAAEJ,WADjB;AAEI,MAAA,UAAU,EAAEC,SAFhB;AAGI,MAAA,OAAO,EAAE,MAAMH,kBAAkB,CAACC,IAAD,CAHrC;AAII,MAAA,SAAS,EAAEG,YAAY;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAUH,CA9BD;;GAAMR,M;;KAAAA,M;AAgCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Rating = (props) => {\n    const [isHovered, setIsHovered] = useState(false);\n\n    const { handleToggleRating, rank } = props;\n\n    function handleHover() {\n        setIsHovered(true);\n    }\n\n    function handleOut() {\n        setIsHovered(false);\n    }\n\n    function getClassName() {\n        const { isRated } = props;\n        let className = isRated ? \"bi bi-star-fill\" : \"bi bi-star\";\n        className += isHovered ? \" text-primary\" : \"\";\n        return className;\n    }\n\n    return (\n        <>\n            <i\n                onMouseOver={handleHover}\n                onMouseOut={handleOut}\n                onClick={() => handleToggleRating(rank)}\n                className={getClassName()}\n            ></i>\n        </>\n    );\n};\n\nexport default Rating;\n"]},"metadata":{},"sourceType":"module"}